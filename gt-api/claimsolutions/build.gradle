version releaseVersion

repositories {
    maven { url rootProject.file('../gt-api/repository') }
}

apply plugin: "java"
apply plugin: "java-library"
apply plugin: "idea"
apply plugin: "com.github.spacialcircumstances.gradle-cucumber-reporting"

sourceCompatibility = JavaVersion.VERSION_11

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'

    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

test {
    testLogging {
        exceptionFormat 'full'
        events 'started', 'skipped', 'passed', 'failed'
        showStandardStreams true
    }
    outputs.upToDateWhen {false}
}

clean.doFirst {
    delete "${buildDir}"
    delete "target"
}

dependencies {
    implementation group: 'junit', name: 'junit', version: '4.13.2'
}

sourceSets {
    main {
        java {
            srcDir file('src/main/java')
        }
        resources{
            srcDir file('src/main/java')
        }
    }
    test {
        resources {
            srcDirs = ['src/main/java']
        }
    }
}

/*
* This is for creating the fat Jar distribution.
*/
task createApiJar(type: Jar) {
    archiveFileName= project.name + '.jar'

    from (configurations.runtimeClasspath.findAll{
        it.name.endsWith('jar')
    }.collect { it.isDirectory() ? it : zipTree(it) }){
        exclude ("log4j.properties")
        exclude 'META-INF/*.RSA'
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF', 'META-INF/**'
        exclude 'license','license/**'
    }
    with jar
}

// Gradle task to run custom test suite via test suite name as a System Property
// Ex: gradle runTestSuite -DtestSuite=CCScenariosRunner command
task runTestSuite(type: Test) {
    def testSuiteToRun = System.getProperty("testSuite")
    include "${testSuiteToRun}.class"
}
runTestSuite.onlyIf { System.getProperty("testSuite") != null}

cucumberReports {
    outputDir = file('target')
    buildId = '0'
    reports = files("target/cucumber-reports/Cucumber.json")
}

/* Gradle task to modify Junit XML report with SUT log correlation info. */
task (updateReportWithDDTag, type: JavaExec) {
    dependsOn 'classes'
    dependsOn 'runTestSuite'
    main = 'gw.gtapi.util.report.ISLogCorrelationReportUtil'
    classpath = sourceSets.main.runtimeClasspath
    description = "Run the LogCorrelationReportUtil"
}
